language: rust
env:
  - RUSTFLAGS='-F warnings'
rust:
  - stable
#  - nightly
#  - beta
os:
  - linux
#  - osx
  - windows
services:
  - docker
before_script:
  - rustup component add rustfmt
  - rustup component add clippy
script:
  - cargo build --verbose  --all
  - cargo build --verbose  --example secio_simple
stages:
  - Check
  - Test
cache: cargo
matrix:
  allow_failures:
    - rust: nightly
  fast_finish: true
  include:
    - stage: Check
      name: Format
      script:
        - cargo fmt --all -- --check
    - stage: Check
      name: Clippy
      script:
        -  RUSTFLAGS='-F warnings' cargo clippy --all  -- -A clippy::derive_hash_xor_eq --verbose
    - stage: Test
      name: Secio test
      os: linux
      script:
        - cargo test -p secio
        - cargo test -p bench
    - stage: Test
      name: Secio simple that rust client connect  go server
      os: linux
      script:
        - docker build -t libp2p-rs/go-secio-server:latest -f secio/examples/go/Dockerfile  .
        - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin registry.paradeum.com
        - docker tag libp2p-rs/go-secio-server:latest registry.paradeum.com/libp2p-rs/go-secio-server:latest 
        - docker push registry.paradeum.com/libp2p-rs/go-secio-server:latest
        - docker run -d  -p 1337:1337 libp2p-rs/go-secio-server:latest
        - docker ps -a
        - pwd
        - cargo run --example secio_simple

branches:
  only: master

notifications:
  email:
    on_success: never